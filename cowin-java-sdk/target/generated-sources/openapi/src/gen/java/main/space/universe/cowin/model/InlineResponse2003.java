/*
 * Co-WIN Public APIs
 * Co-WIN Public APIs to find appointment availabilty and to download vaccination certificates. These APIs are available for use by all third party applications. The appointment availability data is cached and may be upto 30 minutes old. Further, these APIs are subject to a rate limit of 100 API calls per 5 minutes per IP. Please consider these points while using the APIs in your application. For further questions, please visit our <a href=\"https://github.com/cowinapi/developer.cowin/issues\" target=\"_blank\">Open Tracker on GitHub</a>.<br>[<i>Updated on 5 May 2021</i>]
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package space.universe.cowin.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import space.universe.cowin.model.InlineResponse2003Districts;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * InlineResponse2003
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-10T22:36:34.068661500+05:30[Asia/Calcutta]")
public class InlineResponse2003 implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_DISTRICTS = "districts";
  @SerializedName(SERIALIZED_NAME_DISTRICTS)
  private Set<InlineResponse2003Districts> districts = null;

  public static final String SERIALIZED_NAME_TTL = "ttl";
  @SerializedName(SERIALIZED_NAME_TTL)
  private BigDecimal ttl;


  public InlineResponse2003 districts(Set<InlineResponse2003Districts> districts) {
    
    this.districts = districts;
    return this;
  }

  public InlineResponse2003 addDistrictsItem(InlineResponse2003Districts districtsItem) {
    if (this.districts == null) {
      this.districts = new LinkedHashSet<>();
    }
    this.districts.add(districtsItem);
    return this;
  }

   /**
   * Get districts
   * @return districts
  **/
  @javax.annotation.Nullable
  @Valid
 @Size(min=1)  @ApiModelProperty(value = "")

  public Set<InlineResponse2003Districts> getDistricts() {
    return districts;
  }


  public void setDistricts(Set<InlineResponse2003Districts> districts) {
    this.districts = districts;
  }


  public InlineResponse2003 ttl(BigDecimal ttl) {
    
    this.ttl = ttl;
    return this;
  }

   /**
   * Time in hours to cache the data. Client applications can use this data for this many number of hours before calling this API again.
   * @return ttl
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Time in hours to cache the data. Client applications can use this data for this many number of hours before calling this API again.")

  public BigDecimal getTtl() {
    return ttl;
  }


  public void setTtl(BigDecimal ttl) {
    this.ttl = ttl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2003 inlineResponse2003 = (InlineResponse2003) o;
    return Objects.equals(this.districts, inlineResponse2003.districts) &&
        Objects.equals(this.ttl, inlineResponse2003.ttl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(districts, ttl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2003 {\n");
    sb.append("    districts: ").append(toIndentedString(districts)).append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

